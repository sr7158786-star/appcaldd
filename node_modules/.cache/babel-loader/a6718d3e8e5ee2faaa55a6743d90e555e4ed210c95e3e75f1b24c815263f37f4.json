{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/NutritionSummary.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionSummary = ({\n  current,\n  goals\n}) => {\n  const calculatePercentage = (current, goal) => {\n    return Math.min(current / goal * 100, 100);\n  };\n  const CircularProgress = ({\n    percentage,\n    size = 80,\n    strokeWidth = 8,\n    color = '#1f2937'\n  }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const strokeDasharray = `${percentage / 100 * circumference} ${circumference}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: size,\n        height: size,\n        className: \"transform -rotate-90\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: \"#e5e7eb\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: size / 2,\n          cy: size / 2,\n          r: radius,\n          stroke: color,\n          strokeWidth: strokeWidth,\n          strokeDasharray: strokeDasharray,\n          strokeLinecap: \"round\",\n          fill: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n  const nutritionItems = [{\n    label: 'Calories',\n    current: Math.round(current.calories),\n    goal: goals.calories,\n    color: '#1f2937'\n  }, {\n    label: 'Protein',\n    current: Math.round(current.protein),\n    goal: goals.protein,\n    color: '#1f2937',\n    unit: 'g'\n  }, {\n    label: 'Carbs',\n    current: Math.round(current.carbs),\n    goal: goals.carbs,\n    color: '#1f2937',\n    unit: 'g'\n  }, {\n    label: 'Fat',\n    current: Math.round(current.fat),\n    goal: goals.fat,\n    color: '#1f2937',\n    unit: 'g'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-4 gap-4\",\n    children: nutritionItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          percentage: calculatePercentage(item.current, item.goal),\n          color: item.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-bold text-gray-900\",\n            children: item.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs font-medium text-gray-900\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), item.unit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: item.unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = NutritionSummary;\nexport default NutritionSummary;\nvar _c;\n$RefreshReg$(_c, \"NutritionSummary\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NutritionSummary","current","goals","calculatePercentage","goal","Math","min","CircularProgress","percentage","size","strokeWidth","color","radius","circumference","PI","strokeDasharray","className","children","width","height","cx","cy","r","stroke","fill","fileName","_jsxFileName","lineNumber","columnNumber","strokeLinecap","nutritionItems","label","round","calories","protein","unit","carbs","fat","map","item","index","_c","$RefreshReg$"],"sources":["/workspace/src/components/NutritionSummary.tsx"],"sourcesContent":["import React from 'react';\nimport { NutritionalInfo, DailyGoals } from '../types';\n\ninterface NutritionSummaryProps {\n  current: NutritionalInfo;\n  goals: DailyGoals;\n}\n\nconst NutritionSummary: React.FC<NutritionSummaryProps> = ({ current, goals }) => {\n  const calculatePercentage = (current: number, goal: number) => {\n    return Math.min((current / goal) * 100, 100);\n  };\n\n  const CircularProgress = ({ \n    percentage, \n    size = 80, \n    strokeWidth = 8, \n    color = '#1f2937' \n  }: { \n    percentage: number; \n    size?: number; \n    strokeWidth?: number; \n    color?: string; \n  }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const strokeDasharray = `${(percentage / 100) * circumference} ${circumference}`;\n\n    return (\n      <div className=\"relative\">\n        <svg width={size} height={size} className=\"transform -rotate-90\">\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"#e5e7eb\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n          />\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke={color}\n            strokeWidth={strokeWidth}\n            strokeDasharray={strokeDasharray}\n            strokeLinecap=\"round\"\n            fill=\"transparent\"\n          />\n        </svg>\n      </div>\n    );\n  };\n\n  const nutritionItems = [\n    {\n      label: 'Calories',\n      current: Math.round(current.calories),\n      goal: goals.calories,\n      color: '#1f2937'\n    },\n    {\n      label: 'Protein',\n      current: Math.round(current.protein),\n      goal: goals.protein,\n      color: '#1f2937',\n      unit: 'g'\n    },\n    {\n      label: 'Carbs', \n      current: Math.round(current.carbs),\n      goal: goals.carbs,\n      color: '#1f2937',\n      unit: 'g'\n    },\n    {\n      label: 'Fat',\n      current: Math.round(current.fat),\n      goal: goals.fat,\n      color: '#1f2937',\n      unit: 'g'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-4 gap-4\">\n      {nutritionItems.map((item, index) => (\n        <div key={index} className=\"flex flex-col items-center\">\n          <div className=\"relative mb-2\">\n            <CircularProgress \n              percentage={calculatePercentage(item.current, item.goal)}\n              color={item.color}\n            />\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <span className=\"text-lg font-bold text-gray-900\">{item.current}</span>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xs font-medium text-gray-900\">{item.label}</div>\n            {item.unit && (\n              <div className=\"text-xs text-gray-500\">{item.unit}</div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NutritionSummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}